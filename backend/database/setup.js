#!/usr/bin/env node

/**
 * Complete Database Setup Script
 * 
 * This script:
 * 1. Tests database connection
 * 2. Creates all 25 tables automatically
 * 3. Seeds initial data (general settings, sample employees, etc.)
 * 
 * Usage:
 *   npm run setup             - Full setup (migrate + seed)
 *   npm run setup:migrate     - Only create tables
 *   npm run setup:seed        - Only seed data (assumes tables exist)
 *   npm run setup:fresh       - Fresh start (‚ö†Ô∏è DESTROYS DATA!)
 */

require('dotenv').config();
const { syncStrategies } = require('../config/syncDatabase');

// Import seed functions
const seedDashboardData = require('./seedDashboardData');
const seedGeneralSettings = require('./seedGeneralSettings');
const { seedAdminUser } = require('./seedAdminUser');

// Parse command line arguments
const args = process.argv.slice(2);
const command = args[0] || 'full';

const setupSteps = {
  // Full setup: migrate + seed
  full: async () => {
    console.log('\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
    console.log('‚ïë          üöÄ HRMS Go V5 - Complete Database Setup              ‚ïë');
    console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n');
    
    try {
      // Step 1: Migrate (create tables)
      console.log('üì¶ Step 1/4: Creating database tables...\n');
      const migrateResult = await syncStrategies.development();
      console.log(`‚úÖ Tables created: ${migrateResult.models.length} models\n`);
      
      // Wait a bit for tables to be ready
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Step 2: Create admin user
      console.log('üîê Step 2/4: Creating admin user...\n');
      await seedAdminUser();
      console.log('‚úÖ Admin user created\n');
      
      // Step 3: Seed general settings
      console.log('üìù Step 3/4: Seeding general settings...\n');
      await seedGeneralSettings.seedGeneralSettings();
      console.log('‚úÖ General settings seeded\n');
      
      // Step 4: Seed dashboard/sample data
      console.log('üìä Step 4/4: Seeding sample data...\n');
      await seedDashboardData.seedAll();
      console.log('‚úÖ Sample data seeded\n');
      
      console.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
      console.log('‚ïë                    ‚úÖ SETUP COMPLETE!                          ‚ïë');
      console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n');
      console.log('Your database is ready with:');
      console.log(`  ‚úÖ ${migrateResult.models.length} tables created`);
      console.log('  ‚úÖ Admin user created (admin@hrms.com / admin123)');
      console.log('  ‚úÖ General settings configured');
      console.log('  ‚úÖ Sample data populated\n');
      console.log('Next steps:');
      console.log('  1. Start backend: npm run dev');
      console.log('  2. Start frontend: cd .. && npm start');
      console.log('  3. Login with your credentials');
      console.log('\n‚ö†Ô∏è  IMPORTANT: Change default password after first login!\n');
      
      process.exit(0);
    } catch (error) {
      console.error('\n‚ùå Setup failed:', error.message);
      console.error('\nFull error:', error);
      process.exit(1);
    }
  },
  
  // Only migrate (create tables)
  migrate: async () => {
    console.log('\nüì¶ Creating database tables...\n');
    try {
      const result = await syncStrategies.development();
      console.log(`\n‚úÖ Success! Created ${result.models.length} tables\n`);
      console.log('Models created:');
      result.models.forEach((model, index) => {
        console.log(`  ${(index + 1).toString().padStart(2, ' ')}. ${model}`);
      });
      console.log('\nNext: Run "npm run setup:seed" to add sample data\n');
      process.exit(0);
    } catch (error) {
      console.error('‚ùå Migration failed:', error.message);
      process.exit(1);
    }
  },
  
  // Only seed data
  seed: async () => {
    console.log('\nüìä Seeding database with sample data...\n');
    try {
      // Seed general settings
      console.log('1. Seeding general settings...');
      await seedGeneralSettings.seedGeneralSettings();
      console.log('   ‚úÖ General settings done\n');
      
      // Seed sample data
      console.log('2. Seeding sample data...');
      await seedDashboardData.seedAll();
      console.log('   ‚úÖ Sample data done\n');
      
      console.log('‚úÖ All data seeded successfully!\n');
      process.exit(0);
    } catch (error) {
      console.error('‚ùå Seeding failed:', error.message);
      console.error(error);
      process.exit(1);
    }
  },
  
  // Fresh start: drop everything and recreate
  fresh: async () => {
    console.log('\nüö® WARNING: This will DELETE ALL DATA!\n');
    console.log('All tables will be dropped and recreated from scratch.');
    console.log('Waiting 5 seconds... (Ctrl+C to cancel)\n');
    
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    try {
      console.log('üóëÔ∏è  Dropping all tables...\n');
      const result = await syncStrategies.fresh();
      console.log(`‚úÖ Tables recreated: ${result.models.length}\n`);
      
      console.log('üìù Seeding general settings...\n');
      await seedGeneralSettings.seedGeneralSettings();
      console.log('‚úÖ General settings seeded\n');
      
      console.log('üìä Seeding sample data...\n');
      await seedDashboardData.seedAll();
      console.log('‚úÖ Sample data seeded\n');
      
      console.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
      console.log('‚ïë              ‚úÖ FRESH DATABASE READY!                          ‚ïë');
      console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n');
      process.exit(0);
    } catch (error) {
      console.error('‚ùå Fresh setup failed:', error.message);
      process.exit(1);
    }
  },
  
  // Show help
  help: () => {
    console.log(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë              HRMS Go V5 - Database Setup Tool                  ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

USAGE:
  npm run setup [command]

COMMANDS:
  (no command)    - Full setup: create tables + seed data (default)
  migrate         - Only create tables (no data)
  seed            - Only seed data (assumes tables exist)
  fresh           - Fresh start: drop all + recreate + seed (‚ö†Ô∏è  DESTROYS DATA!)
  help            - Show this help message

EXAMPLES:
  npm run setup              # Complete setup (recommended for first time)
  npm run setup:migrate      # Just create tables
  npm run setup:seed         # Just add sample data
  npm run setup:fresh        # Fresh start (deletes everything!)

WHAT GETS CREATED:

Tables (25 total):
  ‚úÖ Users, Employees, Roles, Permissions
  ‚úÖ Branches, Departments, Designations
  ‚úÖ Attendance, Shifts, Policies, Leaves
  ‚úÖ Payroll, Salary Components
  ‚úÖ Job Postings, Applications
  ‚úÖ Performance Goals, Training Programs
  ‚úÖ Assets, Categories, Assignments
  ‚úÖ Documents, Calendar Events
  ‚úÖ General Settings

Sample Data:
  ‚úÖ 5 Sample Employees
  ‚úÖ 4 Attendance Records
  ‚úÖ 3 Leave Requests
  ‚úÖ 4 Calendar Events
  ‚úÖ General Settings (83 settings across 22 categories)
  ‚úÖ Configuration Data (departments, branches, etc.)

FIRST TIME SETUP:

1. Make sure Docker is running:
   docker-compose up -d

2. Install dependencies:
   npm install

3. Run full setup:
   npm run setup

4. Start backend:
   npm run dev

5. Start frontend (in another terminal):
   cd ..
   npm start

6. Login:
   URL: http://localhost:3000
   Email: admin@hrms.com
   Password: admin123

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
`);
  },
};

// Execute command
(async () => {
  const commandKey = command.replace(':', '');
  const fn = setupSteps[commandKey] || setupSteps['help'];
  
  if (!setupSteps[commandKey] && command !== 'help') {
    console.log(`\n‚ö†Ô∏è  Unknown command: ${command}`);
    console.log('Run "npm run setup help" for usage info\n');
    process.exit(1);
  }
  
  try {
    await fn();
  } catch (error) {
    console.error('\n‚ùå Error:', error);
    process.exit(1);
  }
})();

